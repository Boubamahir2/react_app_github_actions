name: React CI/CD

on:
  push:
    branches:
      - main
    # paths-ignore:
    #   - 'helm/**'
    #   - 'k8s/**'
    #   - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - uses: actions/checkout@v3  # Optimized checkout action version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }} # Modern, well-supported Node.js version
      #  caching step just before the npm install
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build React project
        run: npm run build  # Assuming you have a build script in package.json
        # Or use Create React App's built-in build command:
        # run: npm run build

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # Optimized checkout action version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }} # Modern, well-supported Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run React tests
        run: npx jest
        # run: npm test  # Assuming you have a test script in package.json
        # Or use Jest's default command:

  push:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}

  # update-newtag-in-helm-chart:
  #   runs-on: ubuntu-latest

  #   needs: push

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
  #     with:
  #       token: ${{ secrets.TOKEN }}

  #   - name: Update tag in Helm chart
  #     run: |
  #       sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

  #   - name: Commit and push changes
  #     run: |
  #       git config --global user.email "amamahir1@gmail.com"
  #       git config --global user.name "Boubamahir2"
  #       git add helm/go-web-app-chart/values.yaml
  #       git commit -m "Update tag in Helm chart"
  #       git push














